<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg
   version="1.0"
   width="720"
   height="200"
   viewBox="0 0 540.00005 150.00001"
   id="svg5"
   sodipodi:docname="alxarafe_shop.svg"
   inkscape:version="1.3.2 (091e20ef0f, 2023-11-25, custom)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:cc="http://creativecommons.org/ns#"
   xmlns:dc="http://purl.org/dc/elements/1.1/">
  <title
     id="title128">Logo Dolibarr ERP-CRM</title>
  <defs
     id="defs5">
    <linearGradient
       id="swatch13">
      <stop
         style="stop-color:#c8ab35;stop-opacity:1;"
         offset="0"
         id="stop13" />
    </linearGradient>
    <linearGradient
       id="swatch4"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#c8ab35;stop-opacity:0;"
         offset="0"
         id="stop4" />
    </linearGradient>
    <linearGradient
       id="swatch3"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#d3bc5f;stop-opacity:0;"
         offset="0"
         id="stop3" />
    </linearGradient>
    <linearGradient
       id="swatch2"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#d3bc5f;stop-opacity:0;"
         offset="0"
         id="stop2" />
    </linearGradient>
    <linearGradient
       id="swatch8"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#0000fe;stop-opacity:1;"
         offset="0"
         id="stop8" />
    </linearGradient>
    <linearGradient
       id="swatch7"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#00000d;stop-opacity:1;"
         offset="0"
         id="stop7" />
    </linearGradient>
    <linearGradient
       id="swatch6"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="0"
         id="stop6" />
    </linearGradient>
    <rect
       x="365.10675"
       y="2670.1628"
       width="2685.1697"
       height="611.95404"
       id="rect5" />
    <meshgradient
       inkscape:collect="always"
       id="meshgradient13"
       gradientUnits="userSpaceOnUse"
       x="182.99742"
       y="-484.36786"
       gradientTransform="matrix(0.04298948,0,0,0.04298948,140.65114,49.506214)">
      <meshrow
         id="meshrow13">
        <meshpatch
           id="meshpatch13">
          <stop
             path="c 1896.44,0  3792.88,0  5689.32,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop14" />
          <stop
             path="c 0,174.994  0,349.988  0,524.981"
             style="stop-color:#c8ab35;stop-opacity:1"
             id="stop15" />
          <stop
             path="c -1896.44,0  -3792.88,0  -5689.32,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop16" />
          <stop
             path="c 0,-174.994  0,-349.988  0,-524.981"
             style="stop-color:#c8ab35;stop-opacity:1"
             id="stop17" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <sodipodi:namedview
     id="namedview5"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:zoom="1.3440554"
     inkscape:cx="454.96637"
     inkscape:cy="277.89033"
     inkscape:window-width="1920"
     inkscape:window-height="1015"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="svg5" />
  <path
     d="m 1701.62,721.15 c -2413.14,-1259.425 -1206.57,-629.713 0,0 z"
     id="path2" />
  <metadata
     id="metadata128">
    <rdf:RDF>
      <cc:Work
         rdf:about="">
        <dc:title>Logo Dolibarr ERP-CRM</dc:title>
      </cc:Work>
    </rdf:RDF>
  </metadata>
  <text
     xml:space="preserve"
     style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:8.94354px;line-height:0%;font-family:Arial;-inkscape-font-specification:Arial;text-align:start;writing-mode:lr-tb;text-anchor:start;display:inline;fill:#007b8c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.745294"
     x="445.40903"
     y="46.705166"
     id="text5484"
     transform="scale(0.8955774,1.1165981)"><tspan
       style="font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:32.0121px;line-height:100%;font-family:Arial;-inkscape-font-specification:Arial;text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#007b8c;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.745294"
       sodipodi:role="line"
       id="tspan5486"
       x="445.40903"
       y="46.705166">ERP/CRM</tspan></text>
  <g
     id="g5-6"
     transform="matrix(0.1719779,0,0,0.15288789,127.74635,-227.07759)">
    <path
       d="m 6892,9940 c -157,-63 -363,-162 -379,-182 -10,-12 -13,-453 -13,-2079 V 5608 c 0,-23 350,127 507,218 34,20 44,51 39,124 -1,19 -3,936 -4,2038 -2,1594 -5,2002 -14,2002 -7,0 -68,-22 -136,-50 z m -3403,-10 c -286,-20 -458,-86 -617,-234 -138,-130 -215,-286 -241,-486 -25,-195 -31,-619 -28,-2057 1,-820 5,-1494 8,-1497 19,-19 483,175 517,216 11,13 14,182 15,859 l 2,843 30,9 c 17,5 383,10 838,10 790,2 809,2 823,-17 12,-17 14,-165 14,-978 0,-712 3,-958 11,-958 28,0 291,114 457,198 31,16 55,35 58,47 3,11 3,740 1,1620 -4,1847 -1,1785 -98,1985 -35,71 -58,101 -139,181 -85,86 -109,103 -201,147 -106,52 -206,82 -339,102 -94,14 -938,22 -1111,10 z m 891,-480 c 129,-13 183,-27 261,-66 78,-39 141,-105 163,-172 27,-79 35,-191 47,-655 9,-344 9,-451 0,-460 -24,-24 -1635,-34 -1694,-11 -24,9 -29,167 -18,584 13,492 27,568 114,652 78,76 176,113 344,127 129,12 672,12 783,1 z m 15119,480 c -167,-12 -295,-41 -394,-90 -139,-69 -265,-203 -321,-341 -52,-127 -57,-184 -58,-579 -1,-201 -4,-370 -8,-376 -4,-7 -40,-20 -80,-29 -124,-30 -135,-41 -188,-176 -12,-29 -46,-106 -77,-171 -31,-65 -53,-121 -49,-125 3,-4 90,-10 192,-13 146,-5 187,-9 195,-21 5,-8 8,-482 6,-1182 -2,-1045 0,-1167 13,-1167 79,0 523,194 537,234 3,12 7,489 7,1062 1,867 3,1044 15,1057 12,15 47,17 322,17 217,0 316,4 334,12 21,9 49,58 131,225 57,117 104,217 104,222 0,15 -148,21 -525,21 -325,0 -374,2 -385,16 -11,12 -11,83 -3,367 12,427 13,432 127,496 69,39 146,50 381,57 110,3 212,10 226,15 32,12 44,32 119,209 34,80 73,167 87,194 14,27 21,52 16,56 -12,12 -581,19 -724,10 z M 9627,8789 c -54,-77 -125,-201 -243,-420 -112,-212 -309,-563 -343,-613 -14,-22 -31,-41 -37,-43 -25,-8 -188,243 -340,523 -237,437 -280,514 -312,559 -32,46 -35,47 -76,43 -49,-6 -405,-170 -431,-198 -16,-18 -15,-22 10,-77 15,-32 71,-123 123,-203 52,-80 139,-219 193,-310 186,-313 234,-392 354,-571 66,-100 126,-191 134,-204 13,-20 11,-29 -22,-100 -21,-43 -70,-130 -110,-194 -41,-64 -89,-143 -107,-176 -19,-33 -146,-240 -283,-460 -241,-387 -307,-500 -307,-527 0,-22 391,-209 468,-224 29,-6 30,-4 99,128 39,73 122,225 185,338 63,113 137,246 163,295 58,108 178,308 212,353 13,17 30,32 37,32 18,0 66,-75 168,-260 47,-85 136,-247 198,-360 127,-230 269,-471 305,-515 l 23,-30 99,49 c 102,50 326,178 355,204 16,13 15,17 -10,56 -143,223 -286,453 -430,691 -47,77 -131,214 -187,305 -141,228 -195,327 -195,362 0,20 32,78 102,185 55,86 183,292 283,457 293,484 329,540 416,653 55,70 58,63 -52,132 -80,50 -328,169 -368,177 -26,5 -33,0 -74,-57 z m 1685,-48 c -54,-9 -86,-41 -140,-135 -45,-78 -126,-311 -117,-334 4,-11 84,-12 477,-6 580,8 565,10 658,-84 100,-102 104,-115 108,-321 2,-95 0,-177 -5,-182 -4,-4 -51,-1 -103,8 -129,21 -748,30 -903,13 -220,-24 -347,-78 -467,-199 -149,-150 -200,-310 -215,-676 -14,-317 26,-607 105,-772 86,-178 251,-284 505,-325 99,-16 766,-15 928,1 68,7 115,7 126,1 10,-5 23,-33 31,-65 8,-32 20,-60 29,-63 23,-9 109,26 191,76 41,26 133,76 205,112 119,59 130,67 127,90 -2,14 -7,518 -11,1120 -8,1063 -9,1098 -30,1189 -45,201 -58,229 -151,314 -154,143 -325,218 -543,237 -124,11 -738,11 -805,1 z m 666,-1501 c 136,-15 237,-73 282,-161 36,-69 61,-418 40,-569 -20,-149 -95,-274 -187,-309 -51,-20 -662,-29 -750,-11 -105,22 -179,126 -205,289 -16,103 -5,462 17,545 24,91 67,154 128,185 44,22 64,25 235,31 291,11 351,11 440,0 z m 2337,1499 c -259,-34 -471,-176 -569,-383 -42,-87 -61,-161 -76,-291 -17,-147 -10,-2439 7,-2456 17,-17 108,20 345,138 l 188,94 2,1117 c 3,1257 -5,1140 83,1221 78,72 91,75 350,81 257,6 299,16 344,79 42,59 182,384 171,395 -14,14 -746,18 -845,5 z m 1908,4 c -55,-5 -73,-28 -151,-193 -89,-189 -116,-260 -102,-274 8,-8 152,-11 508,-11 494,0 497,0 554,-23 87,-35 152,-113 176,-212 15,-61 36,-309 27,-318 -4,-4 -248,-7 -543,-7 -517,-1 -540,-2 -625,-23 -48,-11 -108,-30 -133,-42 -69,-30 -166,-102 -222,-166 -137,-153 -174,-325 -174,-799 0,-428 45,-607 190,-759 98,-102 200,-150 386,-182 128,-23 677,-31 881,-14 220,19 199,23 205,-31 13,-111 41,-107 326,37 126,64 232,121 236,128 4,7 6,518 4,1137 -3,1252 -1,1212 -71,1351 -21,40 -53,95 -73,121 -82,113 -233,204 -420,254 -96,26 -99,26 -517,28 -231,1 -439,0 -462,-2 z m 835,-1531 c 51,-27 101,-99 134,-192 21,-60 23,-85 26,-325 2,-174 0,-272 -8,-298 -12,-42 -125,-168 -174,-195 -27,-15 -74,-17 -354,-20 -351,-4 -389,1 -473,54 -52,33 -105,107 -122,174 -21,79 -16,528 7,615 32,116 106,188 211,204 33,5 206,8 385,8 317,-2 326,-3 368,-25 z m 4387,1528 c -203,-27 -315,-78 -435,-199 -93,-94 -137,-169 -173,-296 -20,-67 -21,-112 -28,-915 -4,-509 -3,-885 3,-945 21,-229 71,-360 177,-465 98,-97 221,-157 386,-186 209,-37 943,-37 1135,0 274,53 443,199 521,451 73,238 92,622 34,701 -11,16 -17,17 -56,5 -24,-7 -91,-36 -149,-64 -58,-28 -152,-71 -210,-97 l -105,-46 -1,-120 c -1,-167 -19,-219 -99,-300 -81,-83 -88,-84 -488,-84 -356,0 -427,8 -505,57 -49,31 -97,92 -108,136 -6,26 0,35 57,91 35,34 109,96 164,137 177,132 315,240 516,399 108,85 301,236 430,335 459,354 570,450 585,509 8,35 -23,270 -51,381 -77,305 -287,470 -655,515 -97,12 -855,11 -945,0 z m 906,-498 c 49,-24 209,-180 209,-204 0,-46 -124,-156 -665,-593 -88,-71 -214,-175 -280,-230 -215,-180 -250,-197 -259,-122 -9,78 -15,710 -7,858 8,165 20,196 94,250 78,57 175,68 587,65 264,-1 277,-2 321,-24 z"
       style="fill:#264354;fill-opacity:1"
       transform="matrix(0.1,0,0,-0.1,0,2965)"
       id="path5" />
  </g>
  <g
     id="g5-3"
     transform="matrix(0.07380527,0,0,0.07137077,-9.5644736,6.1047886)">
    <path
       d="m 12479.071,20170.248 c 3258.233,-5049.001 -309.797,479.561 3265.162,-5060.25 L 11879,15090 l -405,-637 c 8,-8 5570,-3 5578,5 l -3782.432,5711.063 z"
       style="fill:#ff6541;fill-opacity:1"
       transform="matrix(0.24776,0,0,-0.24776,-1918.09,5174.557)"
       id="path1-7" />
    <path
       d="m 8880,14251 399,-580 2903,4977 2043,-3124 c 39,-40 43,-42 120,-48 76,-6 744,10 753,19 l -2909,4505 c -5344.16,-9248.835 1762.286,3061.847 -3309,-5749 z"
       style="fill:#ff6541;fill-opacity:1"
       transform="matrix(0.24776,0,0,-0.24776,-1918.09,5174.557)"
       id="path3-5" />
    <path
       d="m 12183,17943 -2593,-4517 6962,-42 531,653 -6227.828,-3.689 L 12625,17247 Z"
       style="fill:#ff6541;fill-opacity:1"
       transform="matrix(0.24776,0,0,-0.24776,-1918.09,5174.557)"
       id="path4-3" />
  </g>
  <text
     xml:space="preserve"
     style="font-size:673.053px;font-family:Serif;-inkscape-font-specification:'Serif, Normal';fill:#d3bc5f;fill-opacity:0;stroke:#000000;stroke-width:0.75"
     x="157.10446"
     y="38.888847"
     id="text1"><tspan
       sodipodi:role="line"
       id="tspan1"
       style="stroke-width:0.75"
       x="157.10446"
       y="38.888847" /></text>
  <text
     xml:space="preserve"
     style="font-size:28.9341px;font-family:Serif;-inkscape-font-specification:'Serif, Normal';fill:#008000;fill-opacity:1;stroke:#000000;stroke-width:0.032242"
     x="147.41856"
     y="50.962822"
     id="text2"><tspan
       sodipodi:role="line"
       id="tspan2"
       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:32px;font-family:Sans;-inkscape-font-specification:'Sans, Bold';font-variant-ligatures:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-east-asian:normal;fill:#008000;fill-opacity:1;stroke-width:0.032242"
       x="147.41856"
       y="50.962822">Alxarafe Shop</tspan></text>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
